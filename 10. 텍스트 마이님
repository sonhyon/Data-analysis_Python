[대통령 연설문 텍스트 마이닝]

#KoNLPy 패키지 설치하기
1. 자바 설치하기

2. KoNLPy 의존성 패키지 설치하기
pip install jpype1

3. KoNLPy 설치하기
pip install konlpy

#가장 많이 사용된 단어 알아보기
1. 연설문 불러오기
moon = open('speech_moon.txt', encoding = 'UTF-8').read()
moon

2. 불필요한 문자 제거하기
import re
moon - re.sub('[^가-핳]', ' ', moon) #[^가-핳]은 한글이 아닌 모든 문자를 의미하는 정규 표현식
moon

3. 명사 추출하기
import konlpy
hannanum = konlpy.tag.Hannanum()
nouns = hannanum.nouns(moon)
nouns

import pandas as pd
df_word = pd.DataFrame({'word' : nouns}) #데이터 프레임으로 변환
df_word

4. 단어 빈도표 만들기
df_word['count'] = df_word['word'].str.len()
df_word

df_word = df_word.query('count >= 2') #두 글자 이상 단어만 남기기
df_word.sort_values('count')

df_word = df_word.groupby('word', as_index = False) \
                 .agg(n = ('word', 'count')) \
                 .sort_values('n', ascending = False)
df_word

5. 단어 빈도 막대 그래프 만들기
top20 = df_word.head(20)
top20

import seaborn as sns
import matplotlib.pyplot as plt

plt.rcParams.update({'font.family' : 'Malgun Gothic',
                     'figure.dpi'  : '120',
                     'figure.figsize' : [6.5, 6]})

sns.barplot(data = top20, y = 'word', x = 'n')


#워드 클라우드 만들기
1. wordcloud 패키지 설치하기
pip install wordcloud

2. 한글 폰트 설정하기
font = 'DoHyeon-Regular.ttf'

3. 단어와 빈도를 담은 딕셔너리 만들기
dic_word = df_word.set_index('word').to_dict()['n']
dic_word

4. 워드 클라우드 만들기
from wordcloud import WordCloud
wc = wordCloud(random_state = 1234,
               font_path = font,
               width = 400,
               height = 400,
               background_color = 'white')

img_wordcloud = wc.generate_from_frequencies(dic_word)

plt.figure(figsize = (10, 10))
plt.axis('off')
plt.imshow(img_wordcloud)


#워드 클라우드 모양 바꾸기
1. mask 만들기
import PIL
icon = PIL.Image.open('cloud.png')

import numpy as np
img = PIL.Image.new('RGB', icon.size, (225,255,255))
img.paste(icon, icon)
img = np.array(img)

2. 워드 클라우드 만들기
wc = WordCloud(random_state = 1234,
               front_path = font,
               width = 400,
               height = 400,
               backgorund_color = 'white',
               mask = img)

img_wordcloud = wc.generate_from_frequencies(dic_word) #워드 클라우드 만들기
plt.figure(figsize = (10, 10))
plt.axis('off')
plt.imshow(img_wordcloud)
